// Vitest Snapshot v1

exports[`setup-component > fixtutes > tests/fixtures/SetupFC.tsx 1`] = `
"import { defineComponent, ref, createVNode, createTextVNode } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  setup(__props) {
    const count = ref(0);
    defineRender(() => createVNode(\\"div\\", null, [createVNode(\\"p\\", null, [createTextVNode(\\"hi, this is \\"), props.name]), createVNode(\\"p\\", null, [count.value]), createVNode(\\"button\\", {
      \\"onClick\\": () => count.value++
    }, [createTextVNode(\\"inc\\")])]));
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > fixtutes > tests/fixtures/async.tsx 1`] = `
"import { defineComponent, withAsyncContext } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  async setup(__props) {
    let __temp, __restore;
    [__temp, __restore] = withAsyncContext(() => globalThis.foo()), await __temp, __restore();
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > fixtutes > tests/fixtures/basic.ts 1`] = `
"import { defineComponent, h } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: { type: String, required: true }
  },
  emits: [\\"change\\"],
  setup(__props) {
    defineOptions({
      name: \\"App\\"
    });
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;
h(App);

export { App };
"
`;

exports[`setup-component > fixtutes > tests/fixtures/render.tsx 1`] = `
"import { defineComponent, createVNode } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    defineRender(() => createVNode(\\"div\\", null, null));
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > fixtutes > tests/fixtures/return-render.tsx 1`] = `
"import { defineComponent, computed, createVNode } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    const sum = computed(() => 1 + 2);
    defineRender(() => createVNode(\\"div\\", null, [sum.value]));
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > fixtutes > tests/fixtures/type-annotation.ts 1`] = `
"import { defineComponent, h } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: { type: String, required: true }
  },
  emits: [\\"change\\"],
  setup(__props) {
    defineOptions({
      name: \\"App\\"
    });
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;
h(App);

export { App };
"
`;

exports[`setup-component > overwriteImportsPath 1`] = `
"import { a, b as c } from \\"../d\\";
import { a1, b2 as b3 } from \\"../../d\\""
`;

exports[`setup-component > overwriteImportsPath 2`] = `"import { a, b as c } from \\"ref\\""`;
